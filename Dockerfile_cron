# Dockerfile to create image with cron services
FROM ubuntu:20.04

WORKDIR /home/ec2-user/twitterBot

# Add the script to the Docker Image
COPY . .
# Give execution rights on the cron scripts
RUN chmod 0644 /home/ec2-user/twitterBot/main.py

#Install Cron
RUN apt-get update

RUN apt-get -y install cron

RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip

RUN pip3 install --upgrade pip

# install dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Add the cron job
RUN crontab -l | { cat; echo "*/30 * * * * python3 /home/ec2-user/twitterBot/main.py"; } | crontab -

#input or pull AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY for AWS account from secrets
ENV AWS_ACCESS_KEY_ID={}
ENV AWS_SECRET_ACCESS_KEY={}
ENV AWS_DEFAULT_REGION=us-east-1c
ENV password=Docker
ENV image=db

# entrypoint moves env variables to /etc/environment so they're accessible by cron
CMD ./entrypoint.sh